{"ast":null,"code":"// import React from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n// import TableData from '../DataTable/StyledTableCell'\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: 36,\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//     whiteSpace: 'nowrap',\n//   },\n//   drawerOpen: {\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerClose: {\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     overflowX: 'hidden',\n//     width: theme.spacing(7) + 1,\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing(9) + 1,\n//     },\n//   },\n//   toolbar: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n// }));\n// export default function MiniDrawer() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(true);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       {/* <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, {\n//               [classes.hide]: open,\n//             })}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography variant=\"h6\" noWrap>\n//             House Founder\n//           </Typography>\n//         </Toolbar>\n//       </AppBar> */}\n//       <Drawer\n//         variant=\"permanent\"\n//         className={clsx(classes.drawer, {\n//           [classes.drawerOpen]: open,\n//           [classes.drawerClose]: !open,\n//         })}\n//         classes={{\n//           paper: clsx({\n//             [classes.drawerOpen]: open,\n//             [classes.drawerClose]: !open,\n//           }),\n//         }}\n//       >\n//         <div className={classes.toolbar}>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n//           </IconButton>\n//         </div>\n//         <Divider />\n//         <List>\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n//             <ListItem button key={text}>\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n//               <ListItemText primary={text} />\n//             </ListItem>\n//           ))}\n//         </List>\n//         <Divider />\n//         <List>\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\n//             <ListItem button key={text}>\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n//               <ListItemText primary={text} />\n//             </ListItem>\n//           ))}\n//         </List>\n//       </Drawer>\n//       <main className={classes.content}>\n//         <div className={classes.toolbar} />\n//         <TableData />\n//       </main>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["D:/UI/New folder/NEW UI/src/components/DataTable/AppDrawar.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\r\n// import clsx from 'clsx';\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import Drawer from '@material-ui/core/Drawer';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import List from '@material-ui/core/List';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Divider from '@material-ui/core/Divider';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import TableData from '../DataTable/StyledTableCell'\r\n\r\n\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   appBar: {\r\n//     zIndex: theme.zIndex.drawer + 1,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     marginLeft: drawerWidth,\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: 36,\r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//     whiteSpace: 'nowrap',\r\n//   },\r\n//   drawerOpen: {\r\n//     width: drawerWidth,\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   drawerClose: {\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     overflowX: 'hidden',\r\n//     width: theme.spacing(7) + 1,\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       width: theme.spacing(9) + 1,\r\n//     },\r\n//   },\r\n//   toolbar: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'flex-end',\r\n//     padding: theme.spacing(0, 1),\r\n//     // necessary for content to be below app bar\r\n//     ...theme.mixins.toolbar,\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//   },\r\n// }));\r\n\r\n// export default function MiniDrawer() {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [open, setOpen] = React.useState(true);\r\n\r\n//   const handleDrawerOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleDrawerClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <CssBaseline />\r\n//       {/* <AppBar\r\n//         position=\"fixed\"\r\n//         className={clsx(classes.appBar, {\r\n//           [classes.appBarShift]: open,\r\n//         })}\r\n//       >\r\n//         <Toolbar>\r\n//           <IconButton\r\n//             color=\"inherit\"\r\n//             aria-label=\"open drawer\"\r\n//             onClick={handleDrawerOpen}\r\n//             edge=\"start\"\r\n//             className={clsx(classes.menuButton, {\r\n//               [classes.hide]: open,\r\n//             })}\r\n//           >\r\n//             <MenuIcon />\r\n//           </IconButton>\r\n//           <Typography variant=\"h6\" noWrap>\r\n//             House Founder\r\n//           </Typography>\r\n//         </Toolbar>\r\n//       </AppBar> */}\r\n//       <Drawer\r\n//         variant=\"permanent\"\r\n//         className={clsx(classes.drawer, {\r\n//           [classes.drawerOpen]: open,\r\n//           [classes.drawerClose]: !open,\r\n//         })}\r\n//         classes={{\r\n//           paper: clsx({\r\n//             [classes.drawerOpen]: open,\r\n//             [classes.drawerClose]: !open,\r\n//           }),\r\n//         }}\r\n//       >\r\n//         <div className={classes.toolbar}>\r\n//           <IconButton onClick={handleDrawerClose}>\r\n//             {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n//           </IconButton>\r\n//         </div>\r\n//         <Divider />\r\n//         <List>\r\n//           {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//         <Divider />\r\n//         <List>\r\n//           {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n//             <ListItem button key={text}>\r\n//               <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n//               <ListItemText primary={text} />\r\n//             </ListItem>\r\n//           ))}\r\n//         </List>\r\n//       </Drawer>\r\n//       <main className={classes.content}>\r\n//         <div className={classes.toolbar} />\r\n//         <TableData />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}